
<style>
* {
  box-sizing: border-box;
}


#regForm {
  background-color: #ffffff;
  margin: 100px auto;
  font-family: Raleway;
  padding: 40px;
  width: 70%;
  min-width: 300px;
}

h1 {
  text-align: center;  
}

input {
  padding: 10px;
  width: 100%;
  font-size: 17px;
  font-family: Raleway;
  border: 1px solid #aaaaaa;
}

/* Mark input boxes that gets an error on validation: */
input.invalid {
  background-color: #ffdddd;
}

/* Hide all steps by default: */
.tab {
  display: none;
}

button {
  background-color: #04AA6D;
  color: #ffffff;
  border: none;
  padding: 10px 20px;
  font-size: 17px;
  font-family: Raleway;
  cursor: pointer;
}

button:hover {
  opacity: 0.8;
}

#prevBtn {
  background-color: #bbbbbb;
}

/* Make circles that indicate the steps of the form: */
.step {
  height: 15px;
  width: 15px;
  margin: 0 2px;
  background-color: #bbbbbb;
  border: none;  
  border-radius: 50%;
  display: inline-block;
  opacity: 0.5;
}

.step.active {
  opacity: 1;
}

/* Mark the steps that are finished and valid: */
.step.finish {
  background-color: #04AA6D;
}
</style> 
 
<div class="form-group">
    <%= if get_flash(@conn, :info) do %>
        <div class="alert alert-success alert-styled-left">
        <button type="button" class="close" data-dismiss="alert">&times; <span class="sr-only">Close</span></button>
        <%= get_flash(@conn, :info) %>
        </div>
    <% end %>
    <%= if get_flash(@conn, :error) do %>
        <div class="alert alert-warning alert-styled-left">
        <button type="button" class="close" data-dismiss="alert">&times; <span class="sr-only">Close</span></button>
        Opps! <%= get_flash(@conn, :error) %>
        </div>
    <% end %>
</div>   


<form id="regForm" action="<%= Routes.sme_path(@conn, :register_sme) %>" enctype="multipart/form-data" method="POST">
 <input type="hidden" name="_csrf_token" value="<%= Plug.CSRFProtection.get_csrf_token()%>">
  <h1>Register:</h1>
  <!-- Company Details -->
  <div class="tab">
    Company Name
    <p><input placeholder="Company Name..." oninput="this.className = ''" name="companyName"></p>
    Contact Number
    <p><input placeholder="Contact Number..." oninput="this.className = ''" name="contactPhone"></p>
    Registration Number
    <p><input placeholder="Registration Number..." oninput="this.className = ''" name="registrationNumber"></p>
    Tax Number
    <p><input placeholder="Tax Number..." oninput="this.className = ''" name="taxNo"></p>
    Company Email
    <p><input placeholder="Company Email..." oninput="this.className = ''" name="contactEmail"></p>
    Document Name
    <p><input placeholder="Document Type..." oninput="this.className = ''" name="docType" type="file"></p>
  </div>
<!-- USER CREDENTIALS -->
  <div class="tab">
    First Name
    <p><input placeholder="First Name..." oninput="this.className = ''" name="firstName"></p>
    Other Names
    <p><input placeholder="Other Names..." oninput="this.className = ''" name="otherName"></p>
    Last Name
    <p><input placeholder="Last Name..." oninput="this.className = ''" name="lastName"></p>
    User Name
    <p><input placeholder="User Name..." oninput="this.className = ''" name="username"></p>
    DOB
    <p><input type="date" placeholder="DOB..." oninput="this.className = ''" name="dateOfBirth"></p>

   ID Type
   <select oninput="this.className = ''" name="meansOfIdentificationType">
    <option></option>
    <option value="NRC"> NRC </option>
    <option value="PASSPORT"> Passport </option>
    <option value="DRIVER_LICENCE"> Driver's License </option>
   </select>
   <br>
   ID Number
   <p><input placeholder="ID Number..." oninput="this.className = ''" name="meansOfIdentificationNumber"></p>
    Title
   <select oninput="this.className = ''" name="title">
    <option></option>
    <option value="MR"> Mr </option>
    <option value="MRS"> Mrs </option>
    <option value="MS"> Ms </option>
   </select>
   <br>
    Gender
   <select oninput="this.className = ''" name="gender">
    <option></option>
    <option value="MALE"> Male </option>
    <option value="FEMALE"> Female </option>
   </select>
    Mobile Number
   <p><input placeholder="Mobile Number..." oninput="this.className = ''" name="mobileNumber"></p>
    Email
   <p><input placeholder="Email..." oninput="this.className = ''" name="emailAddress"></p>
  </div>

  <div style="overflow:auto;">
    <div style="float:right;">
      <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
      <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
    </div>
  </div>
  <!-- Circles which indicates the steps of the form: -->
  <div style="text-align:center;margin-top:40px;">
    <span class="step"></span>
    <span class="step"></span>
    <!-- <span class="step"></span> -->
  </div>
</form>

<script>
var currentTab = 0; // Current tab is set to be the first tab (0)
showTab(currentTab); // Display the current tab

function showTab(n) {
  // This function will display the specified tab of the form...
  var x = document.getElementsByClassName("tab");
  x[n].style.display = "block";
  //... and fix the Previous/Next buttons:
  if (n == 0) {
    document.getElementById("prevBtn").style.display = "none";
  } else {
    document.getElementById("prevBtn").style.display = "inline";
  }
  if (n == (x.length - 1)) {
    document.getElementById("nextBtn").innerHTML = "Submit";
  } else {
    document.getElementById("nextBtn").innerHTML = "Next";
  }
  //... and run a function that will display the correct step indicator:
  fixStepIndicator(n)
}

function nextPrev(n) {
  // This function will figure out which tab to display
  var x = document.getElementsByClassName("tab");
  // Exit the function if any field in the current tab is invalid:
  if (n == 1 && !validateForm()) return false;
  // Hide the current tab:
  x[currentTab].style.display = "none";
  // Increase or decrease the current tab by 1:
  currentTab = currentTab + n;
  // if you have reached the end of the form...
  if (currentTab >= x.length) {
    // ... the form gets submitted:
    document.getElementById("regForm").submit();
    return false;
  }
  // Otherwise, display the correct tab:
  showTab(currentTab);
}

function validateForm() {
  // This function deals with validation of the form fields
  var x, y, i, valid = true;
  x = document.getElementsByClassName("tab");
  y = x[currentTab].getElementsByTagName("input");
  // A loop that checks every input field in the current tab:
  for (i = 0; i < y.length; i++) {
    // If a field is empty...
    if (y[i].value == "") {
      // add an "invalid" class to the field:
      y[i].className += " invalid";
      // and set the current valid status to false
      valid = false;
    }
  }
  // If the valid status is true, mark the step as finished and valid:
  if (valid) {
    document.getElementsByClassName("step")[currentTab].className += " finish";
  }
  return valid; // return the valid status
}

function fixStepIndicator(n) {
  // This function removes the "active" class of all steps...
  var i, x = document.getElementsByClassName("step");
  for (i = 0; i < x.length; i++) {
    x[i].className = x[i].className.replace(" active", "");
  }
  //... and adds the "active" class on the current step:
  x[n].className += " active";
}
</script>

